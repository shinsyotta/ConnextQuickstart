import { CFCoreTypes } from "@connext/types";
import { Wallet } from "ethers";
import { Provider } from "ethers/providers";
import { Node } from "../../src";
export interface NodeContext {
    node: Node;
    store: CFCoreTypes.IStoreService;
}
export interface SetupContext {
    [nodeName: string]: NodeContext;
}
export declare function setupWithMemoryMessagingAndSlowStore(global: any, nodeCPresent?: boolean, newExtendedPrvKeys?: boolean): Promise<SetupContext>;
export declare function setup(global: any, nodeCPresent?: boolean, newExtendedPrvKey?: boolean, messagingService?: CFCoreTypes.IMessagingService, storeServiceFactory?: CFCoreTypes.ServiceFactory): Promise<SetupContext>;
export declare function generateNewFundedWallet(fundedPrivateKey: string, provider: Provider): Promise<Wallet>;
export declare function generateNewFundedExtendedPrvKeys(fundedPrivateKey: string, provider: Provider): Promise<{
    A_EXTENDED_PRV_KEY: string;
    B_EXTENDED_PRV_KEY: string;
}>;
//# sourceMappingURL=setup.d.ts.map