import { BaseProvider } from "ethers/providers";
import { AppIdentity, AppInterface, SignedStateHashUpdate } from "./app-instance";
import { AppABIEncodings, AppInstanceInfo, AppInstanceJson, AppInstanceProposal, CoinBalanceRefundState, coinBalanceRefundStateEncoding, multiAssetMultiPartyCoinTransferEncoding, MultiAssetMultiPartyCoinTransferInterpreterParams, multiAssetMultiPartyCoinTransferInterpreterParamsEncoding, OutcomeType, SingleAssetTwoPartyCoinTransferInterpreterParams, singleAssetTwoPartyCoinTransferInterpreterParamsEncoding, SingleAssetTwoPartyIntermediaryAgreement, StateChannelJSON, TwoPartyFixedOutcome, TwoPartyFixedOutcomeInterpreterParams, twoPartyFixedOutcomeInterpreterParamsEncoding, virtualAppAgreementEncoding } from "./data-types";
import { IRpcNodeProvider, Node } from "./node";
import { ABIEncoding, Address, ContractABI, SolidityValueType } from "./simple-types";
export interface NetworkContext {
    ChallengeRegistry: string;
    CoinBalanceRefundApp: string;
    ConditionalTransactionDelegateTarget: string;
    IdentityApp: string;
    MinimumViableMultisig: string;
    MultiAssetMultiPartyCoinTransferInterpreter: string;
    ProxyFactory: string;
    SingleAssetTwoPartyCoinTransferInterpreter: string;
    TimeLockedPassThrough: string;
    TwoPartyFixedOutcomeFromVirtualAppInterpreter: string;
    TwoPartyFixedOutcomeInterpreter: string;
    provider?: BaseProvider;
}
export declare const EXPECTED_CONTRACT_NAMES_IN_NETWORK_CONTEXT: string[];
export interface DeployedContractNetworksFileEntry {
    contractName: string;
    address: string;
    transactionHash: string;
}
export { ABIEncoding, Address, AppABIEncodings, AppIdentity, AppInstanceInfo, AppInstanceProposal, AppInstanceJson, AppInterface, CoinBalanceRefundState, coinBalanceRefundStateEncoding, multiAssetMultiPartyCoinTransferEncoding, MultiAssetMultiPartyCoinTransferInterpreterParams, multiAssetMultiPartyCoinTransferInterpreterParamsEncoding, singleAssetTwoPartyCoinTransferInterpreterParamsEncoding, SingleAssetTwoPartyIntermediaryAgreement, ContractABI, SolidityValueType, StateChannelJSON, IRpcNodeProvider, Node, SignedStateHashUpdate, OutcomeType, SingleAssetTwoPartyCoinTransferInterpreterParams, twoPartyFixedOutcomeInterpreterParamsEncoding, TwoPartyFixedOutcome, TwoPartyFixedOutcomeInterpreterParams, virtualAppAgreementEncoding };
//# sourceMappingURL=index.d.ts.map