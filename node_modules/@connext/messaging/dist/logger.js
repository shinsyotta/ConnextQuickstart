export class Logger {
    constructor(name, logLevel) {
        this.levels = { debug: 4, info: 3, warn: 2, error: 1 };
        this.logLevel = 3;
        this.name = "Logger";
        this.name = typeof name !== "undefined" ? name : this.name;
        this.logLevel =
            typeof logLevel !== "undefined" ? parseInt(logLevel.toString(), 10) : this.logLevel;
    }
    error(msg) {
        this.log("error", msg);
    }
    warn(msg) {
        this.log("warn", msg);
    }
    info(msg) {
        this.log("info", msg);
    }
    debug(msg) {
        this.log("debug", msg);
    }
    log(level, msg) {
        if (this.levels[level] > this.logLevel)
            return;
        return console[level](`${level}: [${this.name}] ${msg}`);
    }
}
//# sourceMappingURL=logger.js.map