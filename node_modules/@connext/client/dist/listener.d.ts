/// <reference types="node" />
import { EventEmitter } from "events";
import { ChannelRouter } from "./channelRouter";
import { ConnextClient } from "./connext";
import { CFCoreTypes } from "./types";
export declare class ConnextListener extends EventEmitter {
    private log;
    private channelRouter;
    private connext;
    private defaultCallbacks;
    constructor(channelRouter: ChannelRouter, connext: ConnextClient);
    register: () => Promise<void>;
    registerCfListener: (event: CFCoreTypes.EventName, cb: Function) => void;
    removeCfListener: (event: CFCoreTypes.EventName, cb: Function) => boolean;
    registerDefaultListeners: () => void;
    private emitAndLog;
    private matchAppInstance;
    private verifyAndInstallKnownApp;
    private registerAvailabilitySubscription;
    private registerLinkedTransferSubscription;
}
//# sourceMappingURL=listener.d.ts.map