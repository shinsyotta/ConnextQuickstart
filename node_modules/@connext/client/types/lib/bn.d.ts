import { ethers as eth } from 'ethers';
import { BigNumber } from 'ethers/utils';
export declare type BN = BigNumber;
export declare const isBN: typeof eth.utils.BigNumber.isBigNumber;
export declare const toBN: (n: string | number | eth.utils.BigNumber) => eth.utils.BigNumber;
export declare const toWei: (n: string | number | eth.utils.BigNumber) => eth.utils.BigNumber;
export declare const fromWei: typeof eth.utils.formatEther;
export declare const weiToToken: (wei: eth.utils.BigNumber, tokenPerEth: string) => eth.utils.BigNumber;
export declare const tokenToWei: (token: eth.utils.BigNumber, tokenPerEth: string) => eth.utils.BigNumber;
export declare const maxBN: (lon: eth.utils.BigNumber[]) => eth.utils.BigNumber;
export declare const minBN: (lon: eth.utils.BigNumber[]) => eth.utils.BigNumber;
