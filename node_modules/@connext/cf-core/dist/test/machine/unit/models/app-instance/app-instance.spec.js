"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("@connext/types");
const constants_1 = require("ethers/constants");
const utils_1 = require("ethers/utils");
const models_1 = require("../../../../../src/models");
describe("AppInstance", () => {
    it("should be able to instantiate", () => {
        const participants = [
            utils_1.getAddress(utils_1.hexlify(utils_1.randomBytes(20))),
            utils_1.getAddress(utils_1.hexlify(utils_1.randomBytes(20)))
        ];
        const appInstance = new models_1.AppInstance(participants, Math.ceil(Math.random() * 2e10), {
            addr: utils_1.getAddress(utils_1.hexlify(utils_1.randomBytes(20))),
            stateEncoding: "tuple(address foo, uint256 bar)",
            actionEncoding: undefined
        }, false, Math.ceil(Math.random() * 2e10), { foo: utils_1.getAddress(utils_1.hexlify(utils_1.randomBytes(20))), bar: 0 }, 999, Math.ceil(1000 * Math.random()), types_1.OutcomeType.TWO_PARTY_FIXED_OUTCOME, {
            playerAddrs: [constants_1.AddressZero, constants_1.AddressZero],
            amount: constants_1.Zero,
            tokenAddress: constants_1.AddressZero
        }, undefined, undefined);
        expect(appInstance).not.toBe(null);
        expect(appInstance).not.toBe(undefined);
        expect(appInstance.participants).toBe(participants);
    });
});
//# sourceMappingURL=app-instance.spec.js.map