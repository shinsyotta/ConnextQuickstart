export interface IPollerOptions {
    interval: number;
    name: string;
    timeout?: number;
    verbose?: boolean;
    callback(): Promise<any>;
}
/**
 * General purpose poller for calling a callback at a particular interval,
 * with an optional timeout:
 *
 *   const p = new Poller({
 *     name: 'my-poller',
 *     interval: 60 * 1000,
 *     callback: () => console.log('Tick!'),
 *     timeout: 30 * 1000,
 *   })
 */
export declare class Poller {
    private opts;
    private polling;
    private timeout;
    constructor(opts: IPollerOptions);
    isStarted(): boolean;
    start(): any;
    stop: () => any;
}
