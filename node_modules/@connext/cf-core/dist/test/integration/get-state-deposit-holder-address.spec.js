"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const types_1 = require("@connext/types");
const src_1 = require("../../src");
const setup_1 = require("./setup");
describe("Node method follows spec - getStateDepositHolderAddress", () => {
    let nodeA;
    let nodeB;
    beforeAll(async () => {
        const context = await setup_1.setup(global);
        nodeA = context["A"].node;
        nodeB = context["B"].node;
    });
    it("can accept a valid call and return correctly formatted address", async () => {
        const owners = [nodeA.publicIdentifier, nodeB.publicIdentifier];
        const { result: { result: { address } } } = await nodeA.rpcRouter.dispatch(src_1.jsonRpcDeserialize({
            id: Date.now(),
            method: types_1.CFCoreTypes.RpcMethodNames.chan_getStateDepositHolderAddress,
            params: { owners },
            jsonrpc: "2.0"
        }));
        expect(address.length).toBe(42);
    });
});
//# sourceMappingURL=get-state-deposit-holder-address.spec.js.map