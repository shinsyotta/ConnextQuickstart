import { OutcomeType } from "@connext/types";
import { JsonRpcProvider } from "ethers/providers";
import { BigNumber } from "ethers/utils";
import { MiniNode } from "../mininode";
export declare enum Participant {
    A = 0,
    B = 1,
    C = 2
}
export declare class TestRunner {
    static readonly TEST_TOKEN_ADDRESS: string;
    private identityApp;
    mininodeA: MiniNode;
    mininodeB: MiniNode;
    mininodeC: MiniNode;
    multisigAB: string;
    multisigAC: string;
    multisigBC: string;
    provider: JsonRpcProvider;
    private mr;
    connectToGanache(): Promise<void>;
    setup(): Promise<void>;
    unsafeFund(): Promise<void>;
    installVirtualEqualDeposits(outcomeType: OutcomeType, tokenAddress: string): Promise<void>;
    installEqualDeposits(outcomeType: OutcomeType, tokenAddress: string): Promise<void>;
    installSplitDeposits(outcomeType: OutcomeType, tokenAddressA: string, tokenAddressB: string): Promise<void>;
    uninstallVirtual(): Promise<void>;
    uninstall(): Promise<void>;
    assertFB(participant: Participant, tokenAddress: string, expected: BigNumber): void;
}
//# sourceMappingURL=test-runner.d.ts.map