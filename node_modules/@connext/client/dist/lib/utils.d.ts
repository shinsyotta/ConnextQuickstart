import { BigNumber } from "ethers/utils";
export declare const stringify: (obj: object, abrv?: boolean) => string;
export declare const capitalize: (str: string) => string;
export declare const objMap: <T, F extends keyof T, R>(obj: T, func: (val: T[F], field: F) => R) => { [key in keyof T]: R; };
export declare const objMapPromise: <T, F extends keyof T, R>(obj: T, func: (val: T[F], field: F) => Promise<R>) => Promise<{ [key in keyof T]: R; }>;
export declare const insertDefault: (val: string, obj: any, keys: string[]) => any;
export declare const delay: (ms: number) => Promise<void>;
export declare const delayAndThrow: (ms: number, msg?: string) => Promise<void>;
export declare const createLinkedHash: (amount: BigNumber, assetId: string, paymentId: string, preImage: string) => string;
export declare const withdrawalKey: (xpub: string) => string;
export declare const createRandom32ByteHexString: () => string;
export declare const createPaymentId: () => string;
export declare const createPreImage: () => string;
//# sourceMappingURL=utils.d.ts.map