import { Controller } from "rpc-server";
import { RequestHandler } from "../request-handler";
import { Node } from "../types";
export declare abstract class NodeController extends Controller {
    static readonly methodName: Node.MethodName;
    executeMethod(requestHandler: RequestHandler, params: Node.MethodParams): Promise<Node.MethodResult>;
    protected abstract executeMethodImplementation(requestHandler: RequestHandler, params: Node.MethodParams): Promise<Node.MethodResult>;
    protected beforeExecution(requestHandler: RequestHandler, params: Node.MethodParams): Promise<void>;
    protected afterExecution(requestHandler: RequestHandler, params: Node.MethodParams): Promise<void>;
    protected getRequiredLockNames(requestHandler: RequestHandler, params: Node.MethodParams): Promise<string[]>;
}
//# sourceMappingURL=controller.d.ts.map