"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("ethers/utils");
const contracts_1 = require("../contracts");
const utils_2 = require("../utils");
const types_1 = require("./types");
class MultisigCommitment extends types_1.EthereumCommitment {
    constructor(multisigAddress, multisigOwners) {
        super();
        this.multisigAddress = multisigAddress;
        this.multisigOwners = multisigOwners;
    }
    getSignedTransaction(sigs) {
        const multisigInput = this.getTransactionDetails();
        const signaturesList = utils_2.sortSignaturesBySignerAddress(this.hashToSign(), sigs).map(utils_1.joinSignature);
        const txData = new utils_1.Interface(contracts_1.MinimumViableMultisig.abi).functions.execTransaction.encode([
            multisigInput.to,
            multisigInput.value,
            multisigInput.data,
            multisigInput.operation,
            signaturesList
        ]);
        return { to: this.multisigAddress, value: 0, data: txData };
    }
    hashToSign() {
        const { to, value, data, operation } = this.getTransactionDetails();
        return utils_1.keccak256(utils_1.solidityPack(["bytes1", "address[]", "address", "uint256", "bytes", "uint8"], ["0x19", this.multisigOwners, to, value, data, operation]));
    }
}
exports.MultisigCommitment = MultisigCommitment;
//# sourceMappingURL=multisig-commitment.js.map