import { NatsMessagingService } from "./nats";
import { WsMessagingService } from "./ws";
export class MessagingServiceFactory {
    constructor(config) {
        this.config = config;
        const { messagingUrl } = config;
        if (!messagingUrl) {
            throw new Error(`No messaging url provided. Config: ${JSON.stringify(config)}`);
        }
        if (typeof messagingUrl === "string") {
            this.serviceType = messagingUrl.startsWith("nats://") ? "nats" : "ws";
        }
        else if (messagingUrl[0] && messagingUrl[0].startsWith("nats://")) {
            this.serviceType = "nats";
        }
        else {
            throw new Error(`Invalid Messaging Url: ${JSON.stringify(messagingUrl)}`);
        }
    }
    connect() {
        throw Error("Connect service using NatsMessagingService.connect()");
    }
    createService(messagingServiceKey) {
        return this.serviceType === "ws"
            ? new WsMessagingService(this.config, messagingServiceKey)
            : new NatsMessagingService(this.config, messagingServiceKey);
    }
}
//# sourceMappingURL=factory.js.map