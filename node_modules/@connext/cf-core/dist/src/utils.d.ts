import { Provider } from "ethers/providers";
import { Signature } from "ethers/utils";
export declare function getFirstElementInListNotEqualTo(test: string, list: string[]): string;
export declare function timeout(ms: number): Promise<unknown>;
export declare const getCreate2MultisigAddress: (owners: string[], proxyFactoryAddress: string, minimumViableMultisigAddress: string, ethProvider: Provider) => Promise<string>;
export declare const wait: (ms: number) => Promise<unknown>;
export declare const bigNumberifyJson: (json: object) => any;
export declare const deBigNumberifyJson: (json: object) => any;
export declare function signaturesToBytes(...signatures: Signature[]): string;
export declare function sortSignaturesBySignerAddress(digest: string, signatures: Signature[]): Signature[];
export declare function signaturesToBytesSortedBySignerAddress(digest: string, ...signatures: Signature[]): string;
export declare function prettyPrintObject(object: any): string;
export declare function sleep(timeInMilliseconds: number): Promise<unknown>;
//# sourceMappingURL=utils.d.ts.map