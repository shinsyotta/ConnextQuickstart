"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const p_queue_1 = __importDefault(require("p-queue"));
const queued_execution_1 = require("./methods/queued-execution");
const constants_1 = require("./constants");
class QueueWithLockingServiceConnection extends p_queue_1.default {
    constructor(lockName, lockingService, ...args) {
        super(...args);
        this.lockName = lockName;
        this.lockingService = lockingService;
    }
    async add(task) {
        return super.add(() => this.lockingService.acquireLock(this.lockName, task, constants_1.IO_SEND_AND_WAIT_TIMEOUT * 3));
    }
}
class ProcessQueue {
    constructor(lockingService) {
        this.lockingService = lockingService;
        this.queues = new Map();
    }
    addTask(lockNames, task) {
        return queued_execution_1.addToManyQueues(lockNames.map(this.getOrCreateLockQueue.bind(this)), task);
    }
    getOrCreateLockQueue(lockName) {
        if (!this.queues.has(lockName)) {
            this.queues.set(lockName, this.lockingService
                ? new QueueWithLockingServiceConnection(lockName, this.lockingService, {
                    concurrency: 1
                })
                : new p_queue_1.default({ concurrency: 1 }));
        }
        return this.queues.get(lockName);
    }
}
exports.default = ProcessQueue;
//# sourceMappingURL=process-queue.js.map