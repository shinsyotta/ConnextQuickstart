"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class MemoryStoreService {
    constructor(delay = 0) {
        this.delay = delay;
        this.store = new Map();
    }
    async get(path) {
        await new Promise((res) => setTimeout(() => res(), this.delay));
        if (path.endsWith("channel") ||
            path.endsWith("appInstanceIdToProposedAppInstance")) {
            const nestedRecords = Array.from(this.store.entries()).filter(entry => {
                return entry[0].includes(path);
            });
            if (nestedRecords.length === 0) {
                return {};
            }
            const results = {};
            nestedRecords.forEach(entry => {
                const key = entry[0].split("/").pop();
                if (entry[1] !== null) {
                    results[key] = entry[1];
                }
            });
            return results;
        }
        if (this.store.has(path)) {
            return this.store.get(path);
        }
        return Promise.resolve(null);
    }
    async set(pairs) {
        await new Promise(res => setTimeout(() => res(), this.delay));
        for (const pair of pairs) {
            this.store.set(pair.path, JSON.parse(JSON.stringify(pair.value)));
        }
    }
    async reset() {
        await new Promise(res => setTimeout(() => res(), this.delay));
        this.store.clear();
    }
}
exports.MemoryStoreService = MemoryStoreService;
class MemoryStoreServiceFactory {
    constructor(delay = 0) {
        this.delay = delay;
    }
    createStoreService() {
        return new MemoryStoreService(this.delay);
    }
}
exports.MemoryStoreServiceFactory = MemoryStoreServiceFactory;
//# sourceMappingURL=memory-store-service.js.map