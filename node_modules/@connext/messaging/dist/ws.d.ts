import { Node } from "@connext/types";
import { IMessagingService, MessagingConfig } from "./types";
export declare class WsMessagingService implements IMessagingService {
    private readonly config;
    private readonly messagingServiceKey;
    private connection;
    private log;
    private subscriptions;
    constructor(config: MessagingConfig, messagingServiceKey: string);
    connect(): Promise<void>;
    disconnect(): Promise<void>;
    onReceive(subject: string, callback: (msg: Node.NodeMessage) => void): Promise<void>;
    send(to: string, msg: Node.NodeMessage): Promise<void>;
    publish(subject: string, data: any): Promise<void>;
    request(subject: string, timeout: number, data?: object): Promise<any>;
    subscribe(subject: string, callback: (msg: Node.NodeMessage) => void): Promise<void>;
    unsubscribe(subject: string): Promise<void>;
    flush(): Promise<void>;
    private prependKey;
    private assertConnected;
}
//# sourceMappingURL=ws.d.ts.map