"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const controller_1 = __importDefault(require("./app-instance/get-all/controller"));
exports.GetInstalledAppInstancesController = controller_1.default;
const controller_2 = __importDefault(require("./app-instance/get-app-instance/controller"));
exports.GetAppInstanceController = controller_2.default;
const controller_3 = __importDefault(require("./app-instance/get-free-balance/controller"));
exports.GetFreeBalanceStateController = controller_3.default;
const controller_4 = __importDefault(require("./app-instance/get-state/controller"));
exports.GetAppInstanceStateController = controller_4.default;
const controller_5 = __importDefault(require("./app-instance/get-token-indexed-free-balances/controller"));
exports.GetTokenIndexedFreeBalancesController = controller_5.default;
const controller_6 = __importDefault(require("./app-instance/install-virtual/controller"));
exports.InstallVirtualAppInstanceController = controller_6.default;
const controller_7 = __importDefault(require("./app-instance/install/controller"));
exports.InstallAppInstanceController = controller_7.default;
const controller_8 = __importDefault(require("./state-channel/request-deposit-rights/controller"));
exports.RequestDepositRightsController = controller_8.default;
const controller_9 = __importDefault(require("./app-instance/propose-install/controller"));
exports.ProposeInstallAppInstanceController = controller_9.default;
const controller_10 = __importDefault(require("./app-instance/reject-install/controller"));
exports.RejectInstallController = controller_10.default;
const controller_11 = __importDefault(require("./app-instance/take-action/controller"));
exports.TakeActionController = controller_11.default;
const controller_12 = __importDefault(require("./state-channel/rescind-deposit-rights/controller"));
exports.RescindDepositRightsController = controller_12.default;
const controller_13 = __importDefault(require("./app-instance/uninstall-virtual/controller"));
exports.UninstallVirtualController = controller_13.default;
const controller_14 = __importDefault(require("./app-instance/uninstall/controller"));
exports.UninstallController = controller_14.default;
const controller_15 = __importDefault(require("./app-instance/update-state/controller"));
exports.UpdateStateController = controller_15.default;
const controller_16 = __importDefault(require("./proposed-app-instance/get-all/controller"));
exports.GetProposedAppInstancesController = controller_16.default;
const controller_17 = __importDefault(require("./proposed-app-instance/get/controller"));
exports.GetProposedAppInstanceController = controller_17.default;
const controller_18 = __importDefault(require("./state-channel/create/controller"));
exports.CreateChannelController = controller_18.default;
const controller_19 = __importDefault(require("./state-channel/deploy-state-deposit-holder/controller"));
exports.DeployStateDepositController = controller_19.default;
const controller_20 = __importDefault(require("./state-channel/deposit/controller"));
exports.DepositController = controller_20.default;
const controller_21 = __importDefault(require("./state-channel/get/controller"));
exports.GetStateChannelController = controller_21.default;
const controller_22 = __importDefault(require("./state-channel/get-state-deposit-holder-address/controller"));
exports.GetStateDepositHolderAddressController = controller_22.default;
const controller_23 = __importDefault(require("./state-channel/get-all-addresses/controller"));
exports.GetAllChannelAddressesController = controller_23.default;
const controller_24 = __importDefault(require("./state-channel/withdraw-commitment/controller"));
exports.WithdrawCommitmentController = controller_24.default;
const controller_25 = __importDefault(require("./state-channel/withdraw/controller"));
exports.WithdrawController = controller_25.default;
//# sourceMappingURL=index.js.map